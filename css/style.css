/*=========================================FONTS=========================================*/
/*=========================================FONTS=========================================*/
/*=========================================FONTS=========================================*/
@import url("https://fonts.googleapis.com/css?family=Lato:regular,700&display=swap");
@import url("https://fonts.googleapis.com/css?family=Lora:regular,700&display=swap");
@import url("https://fonts.googleapis.com/css?family=Pacifico:regular&display=swap");
@import url("https://fonts.googleapis.com/css?family=Cinzel:regular,500,600,700,800,900&display=swap");
@import url("https://fonts.googleapis.com/css?family=Comfortaa:300,regular,500,600,700&display=swap");
@import url("https://fonts.googleapis.com/css?family=Playfair+Display:regular,700&display=swap");
@import url("https://fonts.googleapis.com/css?family=Alumni+Sans:100,200,300,regular,500,600,700,800,900,100italic,200italic,300italic,italic,500italic,600italic,700italic,800italic,900italic&display=swap");

@font-face {
	font-family: "Torhok";
	src: url("../fonts/Torhok.woff2") format("woff2"), url("../fonts/Torhok.woff") format("woff");
	font-weight: normal;
	font-style: normal;
	font-display: swap;
}

@font-face {
	font-family: "Torhok";
	src: url("../fonts/TorhokItalic.woff2") format("woff2"), url("../fonts/TorhokItalic.woff") format("woff");
	font-weight: normal;
	font-style: italic;
	font-display: swap;
}

@font-face {
	font-family: "OblivionFont";
	src: url("../fonts/OblivionFont.woff2") format("woff2"), url("../fonts/OblivionFont.woff") format("woff");
	font-weight: normal;
	font-style: normal;
	font-display: swap;
}
/*=========================================Zeroing Styles=========================================*/
/*=========================================Zeroing Styles=========================================*/
/*=========================================Zeroing Styles=========================================*/
*,
*::before,
*::after {
	margin: 0;
	padding: 0;
	border: 0;
	box-sizing: border-box;
}
li {
	list-style: none;
}
ul {
	list-style-type: disc;
	margin-block-start: 1em;
	margin-block-end: 1em;
	margin-inline-start: 0px;
	margin-inline-end: 0px;
}
a,
a:visited {
	text-decoration: none;
}
a:hover {
	text-decoration: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
	font-weight: inherit;
	font-size: inherit;
}
img {
	vertical-align: top;
}
body {
	line-height: 1;
	color: rgb(0, 0, 0);
	font-family: OblivionFont ;
	font-size: 18px;
	font-weight: normal;
	font-style: normal;
	background: black url('../img/wallpaper.jpeg') 0 0 /100% no-repeat;
	background-attachment: fixed;
}

p {
	margin-block-start: 1em;
	margin-block-end: 1em;
	margin-inline-start: 0px;
	margin-inline-end: 0px;
}

html {
	scroll-behavior: smooth;
}
/*=========================================CODE=========================================*/
/*=========================================CODE=========================================*/
/*=========================================CODE=========================================*/
/*=====================HEADER=====================*/
.container{
	max-width: 90%;
	margin: 25px auto;
	border-left: 15px double rgb(121, 106, 106);
	border-right: 15px double rgb(121, 106, 106);
}

.title {
	font-size: 650%;
	max-width: 38.5%;
	margin: 0px auto;
	text-align: center;
	text-transform: uppercase;
	opacity: 0.99;
	color: rgb(94, 8, 3);
}

img.logo {
	max-width: 30%;
	min-width: 20%;
}

.title:hover {
	font-size: 650%;
	max-width: 38.5%;
	text-align: center;
	text-transform: uppercase;
	opacity: 0.99;
	background: linear-gradient(45deg, rgba(255, 26, 0, 1) 33.3%, rgba(255, 25, 0, 0) 100%);
	-webkit-background-clip: text;
	-webkit-text-fill-color: transparent;
	color: #ff0000;
}

.title:hover::after {
	content: "";
	background: rgba(255, 255, 255, 0) url(../img/torch2.png) 0 0 no-repeat;
	height: 64px;
	width: 64px;
	display: inline-block;
	margin: 0px 0px 0px -80%;
	filter: drop-shadow(10px 20px 30px orange);
}


.start__button {
	max-width: 200px;
	min-width: 200px;
	font-size: 120%;
	color: white;
	display: block;
	margin: 2% auto;
	padding: 2%;
	text-align: center;
	text-transform: uppercase;
	background-color: #200000;
	border: 4px solid rgba(255, 26, 0, 1);
	border-bottom: 8px solid rgba(255, 26, 0, 1);
	cursor: pointer;
}

.start__button:hover {
	filter: drop-shadow(0px 0px 40px rgb(255, 0, 0));
}

.start__button:active {
	box-shadow: inset -100px 100px 100px 100px rgb(141, 5, 5);
	border: 8px solid rgba(255, 26, 0, 1);
	border-bottom: 4px solid rgba(255, 26, 0, 1);
	border-top: 2px solid rgba(255, 26, 0, 1);
	font-size: 110%;
}
.start__button:focus {
	outline: 4px solid rgb(233, 129, 11);
	filter: drop-shadow(40px 40px 20px rgb(170, 17, 12));
}
/*=====================MAIN=====================*/
.chapter {
	margin: 25% auto 0;
	padding: 30px;
	max-width: 90%;
	height: 100%;
	font-size: 200%;
	border: 3px solid #ff0000;
	background: url('../img/wall.jpeg') 0 0 / 100% no-repeat;
	display: none;
}

.chapter:target {
	display: block;
	box-shadow: 0px -30px 100px 0px rgba(252, 86, 80, 0.479);
}

.text {
	color: white;
	line-height: 250%;
	margin: 0px 0px 0px 0px;
}

.clear {
	clear: both;
}
.chapter::first-letter {
	font-size: 250%;
	color: #ff0000;
}

.climg {
	float: left;
	max-width: 50%;
	padding-right: 15px;
}

.chapter::first-letter {
	font-size: 150%;
	color: #ff0000;
}

.quit,
.continue {
	max-width: 20%;
	color: white;
	display: inline-block;
	margin: 2% auto;
	background-color: #200000;
	padding: 10px;
	text-align: center;
	border: 3px solid rgba(255, 26, 0, 1);
	border-radius: 35%;
	border-bottom: 5px solid rgba(255, 26, 0, 1);
	text-transform: uppercase;
	cursor: pointer;
	font-size: 75%;
}

.continue {
	margin: 0.1% 0% 0.1% 75%;
}

.quit:hover,
.continue:hover {
	filter: drop-shadow(0px 0px 10px rgb(255, 0, 0));
}
.quit:active,
.continue:active {
	box-shadow: inset -100px 100px 100px 100px black;
	border: 6px solid rgba(255, 26, 0, 1);
	border-bottom: 2px solid rgba(255, 26, 0, 1);
	border-top: 1px solid rgba(255, 26, 0, 1);
	font-size: 50%;
}
.quit:focus,
.continue:focus {
	outline: 4px solid rgb(233, 129, 11);
	filter: drop-shadow(40px 40px 20px rgb(170, 17, 12));
}

.c2img {
	margin: 2% 0px 0px 33%;
	border: 6px dotted #e21d03;
}

.c2img:hover {
	filter: drop-shadow(0px 0px 10px rgb(94, 255, 0));
}

.gates {
	cursor: grab;
}

div#target4 {
	color: white;
	line-height: 250%;
	background: none;
}

.c3img {
	width: 25%;
	margin-left: 27.5%;
	cursor: grab;
}

.c3img:hover {
	border: 2px solid #ff0000;
	filter: drop-shadow(0px 0px 10px rgb(255, 0, 0));
}


/*=====================FOOTER=====================*/

/*=====================NOTES=====================*/
/*
Синтаксис, то есть правило записи псевдоклассов прост, мы пишем селектор класса либо селектор типа 
ставим двоеточие, пишем тот или иной псевдосласс и уже после этого открываем фигурные 
скобки и пишем нужные CSS параметры:
Селектор:Псевдокласс { параметры стиля }
================================================================================================================
Отлично, теперь рассмотрим псевдоклассы состояния.

:hover
Срабатывает при наведении на элемент, часто применяется применяется как для ссылок так и для любого другого элемента.

:active
Срабатывает при нажатии на элемент. В основном применяется к ссылкам и кнопкам.

:visited
Срабатывает для посещенных ссылок

:focus
Срабатывает при получении элементом фокуса. Часто применяется к елементам форм. Например инпутам.
================================================================================================================

Теперь рассмотрим псевдоклассы положения в коде.

:first-child
Обращение к первому элементу в блоке

:last-child
Обращение к последнему элементу в блоке

:nth-child(порядковый номер элемента)
Обращение к конкретным элементам в блоке

odd - Обращается к элементам с нечётными номерами
even - Обращается к элементам с чётными номерами
================================================================================================================

Псевдоэлементы – это селекторы, которые определяют область элементов, которая изначально 
отсутствует в дереве документа. Эта область создается искусственно с помощью CSS.

Псевдоэлемент :first-line задает стиль первой строки форматированного текста. 
Длина этой строки зависит от многих факторов, таких как используемый шрифт, 
размер окна браузера, ширина блока, языка и т.д. В правилах стиля допустимо 
использовать только свойства, относящиеся к шрифту, изменению цвета текста и фона.
=================================================================================
Псевдоэлемент :first-letter определяет стиль первого символа в тексте элемента, 
к которому добавляется. 
К этому псевдоэлементу могут применяться только стилевые свойства, 
связанные со свойствами шрифта, полями, отступами, границами, цветом и фоном.
=================================================================================
Псевдоэлемент :before применяется для отображения желаемого контента до содержимого элемента, 
к которому он добавляется. Работает совместно со свойством content. 

При добавлении :before к блочному элементу, значение свойства display может быть только: block, inline, none, list-item. 
Все остальные значения будут трактоваться как block.
При добавлении :before к встроенному элементу, display ограничен значениями inline и none. 
Все остальные будут восприниматься как inline.
=================================================================================
Псевдоэлемент, который используется для вывода желаемого текста после содержимого элемента, 
к которому он добавляется. Псевдоэлемент :after работает совместно со свойством content. 

При добавлении :after к блочному элементу, значение свойства display может быть только: 
block, inline, none, list-item. Все остальные значения будут трактоваться как block.
При добавлении :after к встроенному элементу, display ограничен значениями inline и none. 
Все остальные будут восприниматься как inline.
=================================================================================
::-ms-clear {}
Задаёт стиль кнопки для очистки текстового поля. Исходно эта кнопка не видна, 
она появляется в правой части поля только при вводе текста.
Только IE
=================================================================================
::-moz-focus-inner{}
Задаёт стиль внутренней части элемента
Только FireFox
=================================================================================
*/

/*========NOTES 2

/* Псевдоклассы */

/* Псевдоклассы состояния */
/* 
.link {
	color: #77608d;
	background-color: #fff;
}
 */
/*
:hover
Срабатывает при наведении на элемент, 
часто применяется применяется как для ссылок так
и для любого другого элемента.

.link:hover {
	color: yellow;
}
*/
/*
:active
Срабатывает при нажатии на элемент. 
В основном применяется к ссылкам и кнопкам.

.link:active {
	color: red;
}
*/
/*
:visited
Срабатывает для посещенных ссылок

.link:visited {
	color: orange;
	background-color: #000;
}
*/

/*
Замечание: Из-за причин приватности, 
браузеры строго ограничивают стили, которые вы 
можете применить к элементу, используя этот псевдо-класс:
 только color, background-color, border-color,
  border-bottom-color, border-left-color, border-right-color,
   border-top-color, outline-color, column-rule-color, 
	fill и stroke. Заметьте также, что альфа-канал будет 
	игнорироваться: будет использоваться альфа-канал, 
	используемый для непосещённых ссылок вместо него 
	(но если прозрачность - 0, то в этот случае 
	игнорируется весь цвет, и один из используемых 
	стилей для непосещённых ссылок).
*/

/*
:focus
Срабатывает при получении элементом фокуса. 
Часто применяется к елементам форм. Например инпутам.

.link:focus {
	outline: 1px dotted red;
	color: red;
	text-decoration: line-through;
}
*/
/*
:target
Срабатывает когда элемент является объектом 
на который ссылаются
*/

/* ===================================== */

/* Псевдоклассы положения в коде */


/*
:first-child
Обращение к первому элементу в блоке
*/

/* Любой тег первый в блоке */
/*
.text *:first-child {
	background-color: red;
}
*/
/* Первый в блоке тег P, если выше него ничего нет  */
/*
.text p:first-child {
	background-color: red;
}
*/
/* Первый в блоке тег P, даже если выше него есть другие теги */
/*
.text p:first-of-type {
	background-color: red;
}
*/

/*
:last-child
Обращение к последнему элементу в блоке
*/

/* Любой последнему тег в блоке */
/*
.text *:last-child {
	background-color: red;
}
*/
/* Последний в блоке тег P, если ниже него ничего нет  */
/*
.text p:last-child {
	background-color: red;
}
*/
/* Последний в блоке тег P, даже если ниже него есть другие теги */
/*
.text p:last-of-type {
	background-color: red;
}
*/

/*
:nth-child(порядковый номер элемента)
Обращение к конкретным элементам в блоке
*/
/*
.text p:nth-child(1) {
	background-color: red;
}
*/
/*
.text p:nth-of-type(2) {
	background-color: red;
}
*/

/*===============================================*/

/* Псевдоэлементы */

/*
Псевдоэлемент :first-line задает стиль первой строки форматированного текста. 
Длина этой строки зависит от многих факторов, таких как используемый шрифт, 
размер окна браузера, ширина блока, языка и т.д. В правилах стиля допустимо 
использовать только свойства, относящиеся к шрифту, изменению цвета текста и фона.
*/
/*
.text p::first-line {
	background-color: red; 
}
*/
/*
Псевдоэлемент :first-letter определяет стиль первого символа в тексте элемента, 
к которому добавляется. 
К этому псевдоэлементу могут применяться только стилевые свойства, 
связанные со свойствами шрифта, полями, отступами, границами, цветом и фоном.
*/
/*
.text p::first-letter {
	background-color: red;
}
*/
/*
.block {
}

.block::before {
	content: "";
	width: 25px;
	height: 19px;
	display: inline-block;
	background: url("../img/check.png") 0 0 no-repeat;
}
.block::after {
	content: "";
	width: 25px;
	height: 19px;
	display: inline-block;
	background: url("../img/check.png") 0 0 no-repeat;
}
*/


/*
.list li {
	min-height: 19px;
	background: url("../img/check.png") 0 0 no-repeat;
}
*/
